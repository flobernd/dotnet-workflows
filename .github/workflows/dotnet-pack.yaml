name: .NET Pack

on:
  workflow_call:
    inputs:
      fetch-depth:
        description: Number of commits to fetch. 0 indicates all history for all branches and tags.
        required: false
        type: number
        default: 1
      submodules:
        description: "Whether to checkout submodules: 'true' to checkout submodules or 'recursive' to recursively checkout submodules."
        required: false
        type: string
        default: false

      dotnet-version:
        description: tbd
        type: string
        required: false
        default: 6.0.x

      solution:
        description: The Visual Studio solution for which the packages should be build.
        required: false
        type: string
      project-filter:
        description: A list of glob patterns used for filtering the projects. Use '!' to negate.
        required: false
        type: string
      configuration:
        description: The build configuration to use when building the projects.
        required: false
        type: string
        default: Release
      build_args:
        description: Extra arguments to be passed to the .NET CLI when building the projects.
        required: false
        type: string

      use-nuget-cache:
        description: Specifies whether to globally cache NuGet packages.
        required: false
        type: boolean
        default: false
      nuget-cache-key:
        description: A pattern of files to include in the NuGet cache key hash. For example '**/packages.lock.json' or '**/*.csproj'.
        required: false
        type: string
        default: '**/packages.lock.json'

      artifact:
        description: The name of the output 'nupkg' artifact.
        required: true
        type: string
        default: nupkg

jobs:
  main:
    name: Pack
    runs-on: ubuntu-latest
    env:
      SOLUTION: ${{ inputs.project-filter != '' && format('Solution.{0}.slnf', github.run_id) || inputs.solution }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: ${{ inputs.fetch-depth }}
          submodules: ${{ inputs.submodules }}

      - name: Set up Workflows
        uses: flobernd/workflows/actions/setup-workflows@master

      - name: Setup .NET
        uses: ./.workflows/actions/dotnet/setup
        with:
          dotnet-version: ${{ inputs.dotnet-version }}

      - name: Filter Solution
        if: inputs.project-filter != ''
        uses: ./.workflows/actions/dotnet/filter-solution
        with:
          solution: ${{ inputs.solution }}
          pattern: ${{ inputs.project-filter }}
          output: ${{ env.SOLUTION }}

      # TODO: Replace with action
      - name: .NET Cache Packages
        if: inputs.use-nuget-cache == true
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: ${{ runner.os }}-nuget-${{ hashFiles(inputs.nuget-cache-key) }}
          restore-keys: ${{ runner.os }}-nuget-

      # TODO: Add cache to restore action
      - name: .NET Restore
        uses: ./.workflows/actions/dotnet/restore
        with:
          solution: ${{ env.SOLUTION }}

      - name: .NET Pack
        uses: ./.workflows/actions/dotnet/pack
        with:
          solution: ${{ env.SOLUTION }}
          output: ./nupkg
          configuration: ${{ inputs.configuration }}
          extra-arguments: ${{ inputs.build_args }}

      - name: Upload Artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.artifact }}
          path: ./nupkg
